/*
    file: transform.pydef

    Overloads for Python bindings in KC3D::Transform and related classes

    Copyright 2012-2014 Cirilo Bernardo (cjh.bernardo@gmail.com)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>

*/

// TRANSLATIONs:
void (KC3D::TRANSLATION::*k3d_tra_set1) (KC3D::QUAT) = &KC3D::TRANSLATION::Set;
void (KC3D::TRANSLATION::*k3d_tra_set2) (double, double, double) = &KC3D::TRANSLATION::Set;
void (KC3D::TRANSLATION::*k3d_tra_tran1) (KC3D::QUAT &) = &KC3D::TRANSLATION::Translate;
void (KC3D::TRANSLATION::*k3d_tra_tran2) (double &, double &, double &) = &KC3D::TRANSLATION::Translate;

// ROTATIONs:
void (KC3D::ROTATION::*k3d_rot_rot1) (KC3D::QUAT &) = &KC3D::ROTATION::Rotate;
void (KC3D::ROTATION::*k3d_rot_rot2) (double &, double &, double &) = &KC3D::ROTATION::Rotate;
void (KC3D::ROTATION::*k3d_rot_set1) (KC3D::QUAT) = &KC3D::ROTATION::Set;
void (KC3D::ROTATION::*k3d_rot_set2) (double, double, double, double) = &KC3D::ROTATION::Set;

// Scaling:
void (KC3D::SCALE::*k3d_scale_scale1) (KC3D::QUAT &) = &KC3D::SCALE::Scale;
void (KC3D::SCALE::*k3d_scale_scale2) (double &, double &, double &) = &KC3D::SCALE::Scale;

// Transform
void (KC3D::TRANSFORM::*k3d_xf_setTra1) (KC3D::TRANSLATION) = &KC3D::TRANSFORM::SetTranslation;
void (KC3D::TRANSFORM::*k3d_xf_setTra2) (KC3D::QUAT) = &KC3D::TRANSFORM::SetTranslation;
void (KC3D::TRANSFORM::*k3d_xf_setTra3) (double, double, double) = &KC3D::TRANSFORM::SetTranslation;

void (KC3D::TRANSFORM::*k3d_xf_setRot1) (KC3D::ROTATION) = &KC3D::TRANSFORM::SetRotation;
void (KC3D::TRANSFORM::*k3d_xf_setRot2) (KC3D::QUAT) = &KC3D::TRANSFORM::SetRotation;
void (KC3D::TRANSFORM::*k3d_xf_setRot3) (double, double, double, double) = &KC3D::TRANSFORM::SetRotation;

void (KC3D::TRANSFORM::*k3d_xf_setSca1) (KC3D::SCALE) = &KC3D::TRANSFORM::SetScale;
void (KC3D::TRANSFORM::*k3d_xf_setSca2) (KC3D::QUAT) = &KC3D::TRANSFORM::SetScale;
void (KC3D::TRANSFORM::*k3d_xf_setSca3) (double, double, double) = &KC3D::TRANSFORM::SetScale;
void (KC3D::TRANSFORM::*k3d_xf_setSca4) (double) = &KC3D::TRANSFORM::SetScale;

void (KC3D::TRANSFORM::*k3d_xf_xform1) (KC3D::QUAT &) = &KC3D::TRANSFORM::Transform;
void (KC3D::TRANSFORM::*k3d_xf_xform2) (double &, double &, double &) = &KC3D::TRANSFORM::Transform;
void (KC3D::TRANSFORM::*k3d_xf_xform3) (KC3D::QUAT *, int) = &KC3D::TRANSFORM::Transform;
void (KC3D::TRANSFORM::*k3d_xf_xform4) (double *, double *, double *, int) = &KC3D::TRANSFORM::Transform;
