/*
    file: resistor.pyinc

    Python bindings for KC3DRESISTOR::Resistor

    Copyright 2012-2014 Cirilo Bernardo (cjh.bernardo@gmail.com)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>

*/

    class_<KC3DRESISTOR::RPARAMS>("RParams","Resistor parameters")
        .def_readwrite("scale", &KC3DRESISTOR::RPARAMS::scale, "VRML world scale")
        .def_readwrite("shift", &KC3DRESISTOR::RPARAMS::shift, "x-axis shift to determine center point")
        .def_readwrite("L", &KC3DRESISTOR::RPARAMS::L, "length of resistor body")
        .def_readwrite("D", &KC3DRESISTOR::RPARAMS::D, "diameter of resistor body")
        .def_readwrite("d", &KC3DRESISTOR::RPARAMS::d, "diameter of wire")
        .def_readwrite("p", &KC3DRESISTOR::RPARAMS::p, "lead pitch")
        .def_readwrite("wl", &KC3DRESISTOR::RPARAMS::wl, "wire length below top of PCB")
        .def_readwrite("horiz", &KC3DRESISTOR::RPARAMS::horiz, "True for horizontal orientation")
        .def_readwrite("endshape", &KC3DRESISTOR::RPARAMS::endshape, "'C'ap, 'R'ound or 'B'ulge")
        .def_readwrite("bcap", &KC3DRESISTOR::RPARAMS::bcap, "True if Bulge ends should have a metallic cap")
        .def_readwrite("wsides", &KC3DRESISTOR::RPARAMS::wsides, "vertices in the wire")
        .def_readwrite("bsides", &KC3DRESISTOR::RPARAMS::bsides, "segments in a wire bend")
        .def_readwrite("rsides", &KC3DRESISTOR::RPARAMS::rsides, "vertices in the resistor body")
        .def_readwrite("pwrsuf", &KC3DRESISTOR::RPARAMS::pwrsuf, "suffix for power, ex: \"0W25\"")
        .def_readwrite("spcsuf", &KC3DRESISTOR::RPARAMS::spcsuf, "suffix for lead spacing, ex: \"0I40\"")
        // The COLOR properties are best accessed via a helper routine
    ;

    def("setRColors", KC3DRESISTOR::SetColor, "code color values");


    class_<KC3DRESISTOR::RESISTOR>("Resistor", "Model of a thru-hole resistor")

        .def("create", &KC3DRESISTOR::RESISTOR::Create, "Write a resistor model to a file")
    ;
